Step 1:- INTRO
CODE:-
using System;
using System.Collections.Generic;
using System.Linq;

namespace myApp
{
    class Program
    {
        static void Main()
        {
            Console.WriteLine("Hello World!");
        }
    }
}

OUTPUT:-
CONSOLE
Hello World!
  

STEP2:- STRINGS
CODE
using System;
using System.Collections.Generic;
using System.Linq;

namespace myApp
{
    class Program
    {
        static void Main()
        {
            Console.WriteLine("Hello RAMA!");
        }
    }
}
OUTPUT:- Hello RAMA!
STEP3:- VARIABLES
CODE:-
using System;
using System.Collections.Generic;
using System.Linq;

namespace myApp
{
    class Program
    {
        static void Main()
        {
            var name = "RAMA";
            Console.WriteLine("Hello " + name + "!");
        }
    }
}

OUTPUT:- Hello RAMA!
STEP 4:- STRING INTERPOLATION
CODE:-
using System;
using System.Collections.Generic;
using System.Linq;

namespace myApp
{
    class Program
    {
        static void Main()
        {
            var name = "RAMA";
            Console.WriteLine($"Hello {name}!");
        }
    }
}
OUTPUT:-
Hello RAMA!
STEP5:- METHODS
CODE
using System;
using System.Collections.Generic;
using System.Linq;

namespace myApp
{
    class Program
    {
        static void Main()
        {
            var name = "RAMA";
            Console.WriteLine($"Hello {name.ToUpper()}!");
        }
    }
}
OUTPUT
Hello RAMA!
STEP6:- COLLECTION
CODE:-
using System;
using System.Collections.Generic;
using System.Linq;

namespace myApp
{
    class Program
    {
        static void Main()
        {
            var names = new List<string> { "RAMA", "Felipe", "Emillia" };
            foreach (var name in names)
            {
                Console.WriteLine($"Hello {name.ToUpper()}!");
            }
        }
    }
}
OUTPUT:- Hello RAMA!
Hello FELIPE!
Hello EMILLIA!
EXPLORE INTEGER MATH
CODE:-
int a = 18;
int b = 6;
int c = a + b;
int d = a - b;
int e = a * b;
int f = a % b;
Console.WriteLine(c);
Console.WriteLine(d);
Console.WriteLine(e);
Console.WriteLine(f);

OUTPUT:-
24
12
108
0

EXPLORE ORDER OF OPERATIONS
CODE:- int a = 5;
int b = 4;
int c = 2;
int d = a + b * c;
int e = (a + b) * c;
int f = (a + b) / c;
int g = (a + b) - 6 * c + (12 * 4) / 3 + 12;
Console.WriteLine(f);
Console.WriteLine(d);
Console.WriteLine(e);
Console.WriteLine(g);

OUTPUT:-
4
13
18
25

EXPLORE INTEGER PERCISION
CODE:- int a = 7;
int b = 4;
int c = 3;
int d = (a + b) / c;
int e = (a + b) % c;
Console.WriteLine($"quotient: {d}");
Console.WriteLine($"remainder: {e}");

OUTPUT:-
quotient: 3
remainder: 2

WORK WITH DOUBLE TYPE
CODE:-
double a = 5;
double b = 4;
double c = 2;
double d = (a + b) / c;
Console.WriteLine(d);
double third = 1.0 / 3.0;
Console.WriteLine(third);

OUTPUT:-
4.5
0.333333333333333

WORK WITH DECIMAL TYPES
CODE:-
double a = 1.0;
double b = 3.0;
Console.WriteLine(a / b);

decimal c = 1.0M;
decimal d = 3.0M;
Console.WriteLine(c / d);
OUTPUT:-
0.333333333333333
0.3333333333333333333333333333

 COMPLETE CHALLENGE

CODE:- double radius = 2.50;
double area = Math.PI * radius * radius;
Console.WriteLine(area);

OUTPUT:-
19.6349540849362

